 Thrown by a method invocation on a proxy instance if its invocation
 handler's <a href='../java/lang/reflect/InvocationHandler.html#invoke' title='invoke'>invoke</a> method throws a
 checked exception (a <code>Throwable</code> that is not assignable
 to <code>RuntimeException</code> or <code>Error</code>) that
 is not assignable to any of the exception types declared in the
 <code>throws</code> clause of the method that was invoked on the
 proxy instance and dispatched to the invocation handler.

 <p>An <code>UndeclaredThrowableException</code> instance contains
 the undeclared checked exception that was thrown by the invocation
 handler, and it can be retrieved with the
 <code>getUndeclaredThrowable()</code> method.
 <code>UndeclaredThrowableException</code> extends
 <code>RuntimeException</code>, so it is an unchecked exception
 that wraps a checked exception.

 <p>As of release 1.4, this exception has been retrofitted to
 conform to the general purpose exception-chaining mechanism.  The
 "undeclared checked exception that was thrown by the invocation
 handler" that may be provided at construction time and accessed via
 the <a href='#getUndeclaredThrowable()'>getUndeclaredThrowable()</a> method is now known as the
 <i>cause</i>, and may be accessed via the java.lang.Throwable#getCause() method, as well as the aforementioned "legacy
 method."
 <DL><DT><B>Authors:</B></DT><DD>Peter Jones</DD></DL><DL><DT><B>Version:</B></DT><DD>%I%, %E%</DD></DL><DL><DT><B>See Also:</B></DT><DD><a href='../java/lang/reflect/InvocationHandler.html' title='InvocationHandler'>InvocationHandler</a></DD></DL><DL><DT><B>Since:</B></DT><DD>1.3</DD></DL>
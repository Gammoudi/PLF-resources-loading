{"methods":[{"generic":"public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException","genericExceptionTypes":["java.lang.InterruptedException"],"declaringClass":"java.lang.Object","name":"wait","genericParameterTypes":"(long)","modifiers":273,"returnType":"void","parameterTypes":"(long)","genericReturnType":"void"},{"generic":"public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException","genericExceptionTypes":["java.lang.InterruptedException"],"declaringClass":"java.lang.Object","name":"wait","genericParameterTypes":"(long, int)","modifiers":17,"returnType":"void","parameterTypes":"(long, int)","genericReturnType":"void"},{"generic":"public final void java.lang.Object.wait() throws java.lang.InterruptedException","genericExceptionTypes":["java.lang.InterruptedException"],"declaringClass":"java.lang.Object","name":"wait","genericParameterTypes":"()","modifiers":17,"returnType":"void","parameterTypes":"()","genericReturnType":"void"},{"generic":"public boolean java.lang.Object.equals(java.lang.Object)","genericExceptionTypes":[],"declaringClass":"java.lang.Object","name":"equals","genericParameterTypes":"(java.lang.Object)","modifiers":1,"returnType":"boolean","parameterTypes":"(Object)","genericReturnType":"boolean"},{"generic":"public java.lang.String java.lang.Object.toString()","genericExceptionTypes":[],"declaringClass":"java.lang.Object","name":"toString","genericParameterTypes":"()","modifiers":1,"returnType":"String","parameterTypes":"()","genericReturnType":"java.lang.String"},{"generic":"public native int java.lang.Object.hashCode()","genericExceptionTypes":[],"declaringClass":"java.lang.Object","name":"hashCode","genericParameterTypes":"()","modifiers":257,"returnType":"int","parameterTypes":"()","genericReturnType":"int"},{"generic":"public final native java.lang.Class<?> java.lang.Object.getClass()","genericExceptionTypes":[],"declaringClass":"java.lang.Object","name":"getClass","genericParameterTypes":"()","modifiers":273,"returnType":"Class","parameterTypes":"()","genericReturnType":"java.lang.Class<?>"},{"generic":"public final native void java.lang.Object.notify()","genericExceptionTypes":[],"declaringClass":"java.lang.Object","name":"notify","genericParameterTypes":"()","modifiers":273,"returnType":"void","parameterTypes":"()","genericReturnType":"void"},{"generic":"public final native void java.lang.Object.notifyAll()","genericExceptionTypes":[],"declaringClass":"java.lang.Object","name":"notifyAll","genericParameterTypes":"()","modifiers":273,"returnType":"void","parameterTypes":"()","genericReturnType":"void"}],"superClass":"java.lang.Object","declaredFields":[{"declaringClass":"java.util.concurrent.ConcurrentSkipListMap.Index","name":"node","modifiers":16,"type":"Node"},{"declaringClass":"java.util.concurrent.ConcurrentSkipListMap.Index","name":"down","modifiers":16,"type":"Index"},{"declaringClass":"java.util.concurrent.ConcurrentSkipListMap.Index","name":"right","modifiers":64,"type":"Index"},{"declaringClass":"java.util.concurrent.ConcurrentSkipListMap.Index","name":"rightUpdater","modifiers":24,"type":"AtomicReferenceFieldUpdater"}],"name":"Index","qualifiedName":"java.util.concurrent.ConcurrentSkipListMap.Index","declaredMethods":[{"generic":"final boolean java.util.concurrent.ConcurrentSkipListMap$Index.link(java.util.concurrent.ConcurrentSkipListMap.java.util.concurrent.ConcurrentSkipListMap$Index<K, V>,java.util.concurrent.ConcurrentSkipListMap.java.util.concurrent.ConcurrentSkipListMap$Index<K, V>)","genericExceptionTypes":[],"declaringClass":"java.util.concurrent.ConcurrentSkipListMap.Index","name":"link","genericParameterTypes":"(java.util.concurrent.ConcurrentSkipListMap$Index, java.util.concurrent.ConcurrentSkipListMap$Index)","modifiers":16,"returnType":"boolean","parameterTypes":"(Index, Index)","genericReturnType":"boolean"},{"generic":"final boolean java.util.concurrent.ConcurrentSkipListMap$Index.unlink(java.util.concurrent.ConcurrentSkipListMap.java.util.concurrent.ConcurrentSkipListMap$Index<K, V>)","genericExceptionTypes":[],"declaringClass":"java.util.concurrent.ConcurrentSkipListMap.Index","name":"unlink","genericParameterTypes":"(java.util.concurrent.ConcurrentSkipListMap$Index)","modifiers":16,"returnType":"boolean","parameterTypes":"(Index)","genericReturnType":"boolean"},{"generic":"final boolean java.util.concurrent.ConcurrentSkipListMap$Index.indexesDeletedNode()","genericExceptionTypes":[],"declaringClass":"java.util.concurrent.ConcurrentSkipListMap.Index","name":"indexesDeletedNode","genericParameterTypes":"()","modifiers":16,"returnType":"boolean","parameterTypes":"()","genericReturnType":"boolean"},{"generic":"final boolean java.util.concurrent.ConcurrentSkipListMap$Index.casRight(java.util.concurrent.ConcurrentSkipListMap.java.util.concurrent.ConcurrentSkipListMap$Index<K, V>,java.util.concurrent.ConcurrentSkipListMap.java.util.concurrent.ConcurrentSkipListMap$Index<K, V>)","genericExceptionTypes":[],"declaringClass":"java.util.concurrent.ConcurrentSkipListMap.Index","name":"casRight","genericParameterTypes":"(java.util.concurrent.ConcurrentSkipListMap$Index, java.util.concurrent.ConcurrentSkipListMap$Index)","modifiers":16,"returnType":"boolean","parameterTypes":"(Index, Index)","genericReturnType":"boolean"}],"interfaces":[],"modifiers":8,"type":"CLASS","declaredConstructors":[{"generic":"java.util.concurrent.ConcurrentSkipListMap$Index(java.util.concurrent.ConcurrentSkipListMap.java.util.concurrent.ConcurrentSkipListMap$Node<K, V>,java.util.concurrent.ConcurrentSkipListMap.java.util.concurrent.ConcurrentSkipListMap$Index<K, V>,java.util.concurrent.ConcurrentSkipListMap.java.util.concurrent.ConcurrentSkipListMap$Index<K, V>)","genericExceptionTypes":[],"declaringClass":"java.util.concurrent.ConcurrentSkipListMap.Index","name":"java.util.concurrent.ConcurrentSkipListMap$Index","genericParameterTypes":"(java.util.concurrent.ConcurrentSkipListMap.java.util.concurrent.ConcurrentSkipListMap$Node<K, V>, java.util.concurrent.ConcurrentSkipListMap.java.util.concurrent.ConcurrentSkipListMap$Index<K, V>, java.util.concurrent.ConcurrentSkipListMap.java.util.concurrent.ConcurrentSkipListMap$Index<K, V>)","modifiers":0,"parameterTypes":"(Node, Index, Index)"}],"constructors":[],"fields":[]}
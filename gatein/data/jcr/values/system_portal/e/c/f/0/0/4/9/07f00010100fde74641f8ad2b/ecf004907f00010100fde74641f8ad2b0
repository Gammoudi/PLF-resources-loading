 The management interface for the thread system of
 the Java virtual machine.

 <p> A Java virtual machine has a single instance of the implementation
 class of this interface.  This instance implementing this interface is
 an <a href="ManagementFactory.html#MXBean">MXBean</a>
 that can be obtained by calling
 the <a href='../java/lang/management/ManagementFactory.html#getThreadMXBean' title='ManagementFactory.getThreadMXBean'>ManagementFactory.getThreadMXBean</a> method or
 from the <a href='../java/lang/management/ManagementFactory.html#getPlatformMBeanServer' title=' platform <tt>MBeanServer</tt>'> platform <tt>MBeanServer</tt></a> method.

 <p>The <tt>ObjectName</tt> for uniquely identifying the MXBean for
 the thread system within an MBeanServer is:
 <blockquote>
    <a href='../java/lang/management/ManagementFactory.html#THREAD_MXBEAN_NAME' title=''></a>
 </blockquote>

 <h4>Thread ID</h4>
 Thread ID is a positive long value returned by calling the
 java.lang.Thread#getId method for a thread.
 The thread ID is unique during its lifetime.  When a thread 
 is terminated, this thread ID may be reused.

 <p> Some methods in this interface take a thread ID or an array
 of thread IDs as the input parameter and return per-thread information.

 <h4>Thread CPU time</h4>
 A Java virtual machine implementation may support measuring
 the CPU time for the current thread, for any thread, or for no threads.

 <p>
 The <a href='#isThreadCpuTimeSupported'>isThreadCpuTimeSupported</a> method can be used to determine
 if a Java virtual machine supports measuring of the CPU time for any 
 thread.  The <a href='#isCurrentThreadCpuTimeSupported'>isCurrentThreadCpuTimeSupported</a> method can 
 be used to determine if a Java virtual machine supports measuring of 
 the CPU time for the current  thread.
 A Java virtual machine implementation that supports CPU time measurement 
 for any thread will also support that for the current thread.

 <p> The CPU time provided by this interface has nanosecond precision
 but not necessarily nanosecond accuracy.

 <p>
 A Java virtual machine may disable CPU time measurement
 by default.
 The <a href='#isThreadCpuTimeEnabled'>isThreadCpuTimeEnabled</a> and <a href='#setThreadCpuTimeEnabled'>setThreadCpuTimeEnabled</a>
 methods can be used to test if CPU time measurement is enabled
 and to enable/disable this support respectively.
 Enabling thread CPU measurement could be expensive in some
 Java virtual machine implementations.

 <h4>Thread Contention Monitoring</h4>
 Some Java virtual machines may support thread contention monitoring.
 When thread contention monitoring is enabled, the accumulated elapsed 
 time that the thread has blocked for synchronization or waited for 
 notification will be collected and returned in the 
 <a href="ThreadInfo.html#SyncStats"><tt>ThreadInfo</tt></a> object.
 <p>
 The <a href='#isThreadContentionMonitoringSupported'>isThreadContentionMonitoringSupported</a> method can be used to 
 determine if a Java virtual machine supports thread contention monitoring.
 The thread contention monitoring is disabled by default.  The 
 <a href='#setThreadContentionMonitoringEnabled'>setThreadContentionMonitoringEnabled</a> method can be used to enable
 thread contention monitoring. 

 <h4>Synchronization Information and Deadlock Detection</h4>
 Some Java virtual machines may support monitoring of 
 {<DL><DT><B>linkplain:</B></DT><DD>#isObjectMonitorUsageSupported object monitor usage} and
 {@linkplain #isSynchronizerUsageSupported ownable synchronizer usage}.
 The <a href='#getThreadInfo(long[], boolean, boolean)'>getThreadInfo(long[], boolean, boolean)</a> and 
 <a href='#dumpAllThreads'>dumpAllThreads</a> methods can be used to obtain the thread stack trace
 and synchronization information including which 
 {@linkplain LockInfo <i>lock</i>} a thread is blocked to
 acquire or waiting on and which locks the thread currently owns.
 <p>
 The <tt>ThreadMXBean</tt> interface provides the
 <a href='#findMonitorDeadlockedThreads'>findMonitorDeadlockedThreads</a> and 
 <a href='#findDeadlockedThreads'>findDeadlockedThreads</a> methods to find deadlocks in
 the running application.</DD></DL>
 <DL><DT><B>Authors:</B></DT><DD>Mandy Chung</DD></DL><DL><DT><B>Version:</B></DT><DD>%I%, %G%</DD></DL><DL><DT><B>See Also:</B></DT><DD></DD><DD></DD></DL><DL><DT><B>Since:</B></DT><DD>1.5</DD></DL>
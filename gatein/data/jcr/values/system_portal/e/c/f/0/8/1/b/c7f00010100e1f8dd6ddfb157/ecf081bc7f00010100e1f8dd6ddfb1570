{"methods":[{"generic":"public java.lang.String java.util.regex.Pattern.toString()","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"toString","genericParameterTypes":"()","modifiers":1,"returnType":"String","parameterTypes":"()","genericReturnType":"java.lang.String"},{"generic":"public int java.util.regex.Pattern.flags()","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"flags","genericParameterTypes":"()","modifiers":1,"returnType":"int","parameterTypes":"()","genericReturnType":"int"},{"generic":"public static java.util.regex.Pattern java.util.regex.Pattern.compile(java.lang.String)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"compile","genericParameterTypes":"(java.lang.String)","modifiers":9,"returnType":"Pattern","parameterTypes":"(String)","genericReturnType":"java.util.regex.Pattern"},{"generic":"public static java.util.regex.Pattern java.util.regex.Pattern.compile(java.lang.String,int)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"compile","genericParameterTypes":"(java.lang.String, int)","modifiers":9,"returnType":"Pattern","parameterTypes":"(String, int)","genericReturnType":"java.util.regex.Pattern"},{"generic":"public java.util.regex.Matcher java.util.regex.Pattern.matcher(java.lang.CharSequence)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"matcher","genericParameterTypes":"(java.lang.CharSequence)","modifiers":1,"returnType":"Matcher","parameterTypes":"(CharSequence)","genericReturnType":"java.util.regex.Matcher"},{"generic":"public static boolean java.util.regex.Pattern.matches(java.lang.String,java.lang.CharSequence)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"matches","genericParameterTypes":"(java.lang.String, java.lang.CharSequence)","modifiers":9,"returnType":"boolean","parameterTypes":"(String, CharSequence)","genericReturnType":"boolean"},{"generic":"public java.lang.String[] java.util.regex.Pattern.split(java.lang.CharSequence,int)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"split","genericParameterTypes":"(java.lang.CharSequence, int)","modifiers":1,"returnType":"String[]","parameterTypes":"(CharSequence, int)","genericReturnType":"java.lang.String[]"},{"generic":"public java.lang.String[] java.util.regex.Pattern.split(java.lang.CharSequence)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"split","genericParameterTypes":"(java.lang.CharSequence)","modifiers":1,"returnType":"String[]","parameterTypes":"(CharSequence)","genericReturnType":"java.lang.String[]"},{"generic":"public static java.lang.String java.util.regex.Pattern.quote(java.lang.String)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"quote","genericParameterTypes":"(java.lang.String)","modifiers":9,"returnType":"String","parameterTypes":"(String)","genericReturnType":"java.lang.String"},{"generic":"public java.lang.String java.util.regex.Pattern.pattern()","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"pattern","genericParameterTypes":"()","modifiers":1,"returnType":"String","parameterTypes":"()","genericReturnType":"java.lang.String"},{"generic":"public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException","genericExceptionTypes":["java.lang.InterruptedException"],"declaringClass":"java.lang.Object","name":"wait","genericParameterTypes":"(long)","modifiers":273,"returnType":"void","parameterTypes":"(long)","genericReturnType":"void"},{"generic":"public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException","genericExceptionTypes":["java.lang.InterruptedException"],"declaringClass":"java.lang.Object","name":"wait","genericParameterTypes":"(long, int)","modifiers":17,"returnType":"void","parameterTypes":"(long, int)","genericReturnType":"void"},{"generic":"public final void java.lang.Object.wait() throws java.lang.InterruptedException","genericExceptionTypes":["java.lang.InterruptedException"],"declaringClass":"java.lang.Object","name":"wait","genericParameterTypes":"()","modifiers":17,"returnType":"void","parameterTypes":"()","genericReturnType":"void"},{"generic":"public boolean java.lang.Object.equals(java.lang.Object)","genericExceptionTypes":[],"declaringClass":"java.lang.Object","name":"equals","genericParameterTypes":"(java.lang.Object)","modifiers":1,"returnType":"boolean","parameterTypes":"(Object)","genericReturnType":"boolean"},{"generic":"public native int java.lang.Object.hashCode()","genericExceptionTypes":[],"declaringClass":"java.lang.Object","name":"hashCode","genericParameterTypes":"()","modifiers":257,"returnType":"int","parameterTypes":"()","genericReturnType":"int"},{"generic":"public final native java.lang.Class<?> java.lang.Object.getClass()","genericExceptionTypes":[],"declaringClass":"java.lang.Object","name":"getClass","genericParameterTypes":"()","modifiers":273,"returnType":"Class","parameterTypes":"()","genericReturnType":"java.lang.Class<?>"},{"generic":"public final native void java.lang.Object.notify()","genericExceptionTypes":[],"declaringClass":"java.lang.Object","name":"notify","genericParameterTypes":"()","modifiers":273,"returnType":"void","parameterTypes":"()","genericReturnType":"void"},{"generic":"public final native void java.lang.Object.notifyAll()","genericExceptionTypes":[],"declaringClass":"java.lang.Object","name":"notifyAll","genericParameterTypes":"()","modifiers":273,"returnType":"void","parameterTypes":"()","genericReturnType":"void"}],"superClass":"java.lang.Object","declaredFields":[{"declaringClass":"java.util.regex.Pattern","name":"UNIX_LINES","modifiers":25,"type":"int"},{"declaringClass":"java.util.regex.Pattern","name":"CASE_INSENSITIVE","modifiers":25,"type":"int"},{"declaringClass":"java.util.regex.Pattern","name":"COMMENTS","modifiers":25,"type":"int"},{"declaringClass":"java.util.regex.Pattern","name":"MULTILINE","modifiers":25,"type":"int"},{"declaringClass":"java.util.regex.Pattern","name":"LITERAL","modifiers":25,"type":"int"},{"declaringClass":"java.util.regex.Pattern","name":"DOTALL","modifiers":25,"type":"int"},{"declaringClass":"java.util.regex.Pattern","name":"UNICODE_CASE","modifiers":25,"type":"int"},{"declaringClass":"java.util.regex.Pattern","name":"CANON_EQ","modifiers":25,"type":"int"},{"declaringClass":"java.util.regex.Pattern","name":"serialVersionUID","modifiers":26,"type":"long"},{"declaringClass":"java.util.regex.Pattern","name":"pattern","modifiers":2,"type":"String"},{"declaringClass":"java.util.regex.Pattern","name":"flags","modifiers":2,"type":"int"},{"declaringClass":"java.util.regex.Pattern","name":"compiled","modifiers":194,"type":"boolean"},{"declaringClass":"java.util.regex.Pattern","name":"normalizedPattern","modifiers":130,"type":"String"},{"declaringClass":"java.util.regex.Pattern","name":"root","modifiers":128,"type":"Node"},{"declaringClass":"java.util.regex.Pattern","name":"matchRoot","modifiers":128,"type":"Node"},{"declaringClass":"java.util.regex.Pattern","name":"buffer","modifiers":128,"type":"int[]"},{"declaringClass":"java.util.regex.Pattern","name":"groupNodes","modifiers":128,"type":"GroupHead[]"},{"declaringClass":"java.util.regex.Pattern","name":"temp","modifiers":130,"type":"int[]"},{"declaringClass":"java.util.regex.Pattern","name":"capturingGroupCount","modifiers":128,"type":"int"},{"declaringClass":"java.util.regex.Pattern","name":"localCount","modifiers":128,"type":"int"},{"declaringClass":"java.util.regex.Pattern","name":"cursor","modifiers":130,"type":"int"},{"declaringClass":"java.util.regex.Pattern","name":"patternLength","modifiers":130,"type":"int"},{"declaringClass":"java.util.regex.Pattern","name":"MAX_REPS","modifiers":24,"type":"int"},{"declaringClass":"java.util.regex.Pattern","name":"GREEDY","modifiers":24,"type":"int"},{"declaringClass":"java.util.regex.Pattern","name":"LAZY","modifiers":24,"type":"int"},{"declaringClass":"java.util.regex.Pattern","name":"POSSESSIVE","modifiers":24,"type":"int"},{"declaringClass":"java.util.regex.Pattern","name":"INDEPENDENT","modifiers":24,"type":"int"},{"declaringClass":"java.util.regex.Pattern","name":"lookbehindEnd","modifiers":8,"type":"Node"},{"declaringClass":"java.util.regex.Pattern","name":"accept","modifiers":8,"type":"Node"},{"declaringClass":"java.util.regex.Pattern","name":"lastAccept","modifiers":8,"type":"Node"},{"declaringClass":"java.util.regex.Pattern","name":"$assertionsDisabled","modifiers":4120,"type":"boolean"}],"name":"Pattern","qualifiedName":"java.util.regex.Pattern","declaredMethods":[{"generic":"private java.util.regex.Pattern$CharProperty java.util.regex.Pattern.clazz(boolean)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"clazz","genericParameterTypes":"(boolean)","modifiers":2,"returnType":"CharProperty","parameterTypes":"(boolean)","genericReturnType":"java.util.regex.Pattern$CharProperty"},{"generic":"public java.lang.String java.util.regex.Pattern.toString()","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"toString","genericParameterTypes":"()","modifiers":1,"returnType":"String","parameterTypes":"()","genericReturnType":"java.lang.String"},{"generic":"public int java.util.regex.Pattern.flags()","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"flags","genericParameterTypes":"()","modifiers":1,"returnType":"int","parameterTypes":"()","genericReturnType":"int"},{"generic":"private void java.util.regex.Pattern.append(int,int)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"append","genericParameterTypes":"(int, int)","modifiers":2,"returnType":"void","parameterTypes":"(int, int)","genericReturnType":"void"},{"generic":"private int java.util.regex.Pattern.getClass(int)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"getClass","genericParameterTypes":"(int)","modifiers":2,"returnType":"int","parameterTypes":"(int)","genericReturnType":"int"},{"generic":"public static java.util.regex.Pattern java.util.regex.Pattern.compile(java.lang.String)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"compile","genericParameterTypes":"(java.lang.String)","modifiers":9,"returnType":"Pattern","parameterTypes":"(String)","genericReturnType":"java.util.regex.Pattern"},{"generic":"public static java.util.regex.Pattern java.util.regex.Pattern.compile(java.lang.String,int)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"compile","genericParameterTypes":"(java.lang.String, int)","modifiers":9,"returnType":"Pattern","parameterTypes":"(String, int)","genericReturnType":"java.util.regex.Pattern"},{"generic":"private void java.util.regex.Pattern.compile()","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"compile","genericParameterTypes":"()","modifiers":2,"returnType":"void","parameterTypes":"()","genericReturnType":"void"},{"generic":"public java.util.regex.Matcher java.util.regex.Pattern.matcher(java.lang.CharSequence)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"matcher","genericParameterTypes":"(java.lang.CharSequence)","modifiers":1,"returnType":"Matcher","parameterTypes":"(CharSequence)","genericReturnType":"java.util.regex.Matcher"},{"generic":"public static boolean java.util.regex.Pattern.matches(java.lang.String,java.lang.CharSequence)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"matches","genericParameterTypes":"(java.lang.String, java.lang.CharSequence)","modifiers":9,"returnType":"boolean","parameterTypes":"(String, CharSequence)","genericReturnType":"boolean"},{"generic":"public java.lang.String[] java.util.regex.Pattern.split(java.lang.CharSequence,int)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"split","genericParameterTypes":"(java.lang.CharSequence, int)","modifiers":1,"returnType":"String[]","parameterTypes":"(CharSequence, int)","genericReturnType":"java.lang.String[]"},{"generic":"public java.lang.String[] java.util.regex.Pattern.split(java.lang.CharSequence)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"split","genericParameterTypes":"(java.lang.CharSequence)","modifiers":1,"returnType":"String[]","parameterTypes":"(CharSequence)","genericReturnType":"java.lang.String[]"},{"generic":"private int java.util.regex.Pattern.next()","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"next","genericParameterTypes":"()","modifiers":2,"returnType":"int","parameterTypes":"()","genericReturnType":"int"},{"generic":"static boolean java.util.regex.Pattern.access$200(int,int,int)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"access$200","genericParameterTypes":"(int, int, int)","modifiers":4104,"returnType":"boolean","parameterTypes":"(int, int, int)","genericReturnType":"boolean"},{"generic":"static int java.util.regex.Pattern.access$300(java.lang.CharSequence,int,int)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"access$300","genericParameterTypes":"(java.lang.CharSequence, int, int)","modifiers":4104,"returnType":"int","parameterTypes":"(CharSequence, int, int)","genericReturnType":"int"},{"generic":"static boolean java.util.regex.Pattern.access$400(java.util.regex.Matcher,int,java.lang.CharSequence)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"access$400","genericParameterTypes":"(java.util.regex.Matcher, int, java.lang.CharSequence)","modifiers":4104,"returnType":"boolean","parameterTypes":"(Matcher, int, CharSequence)","genericReturnType":"boolean"},{"generic":"private void java.util.regex.Pattern.readObject(java.io.ObjectInputStream) throws java.io.IOException,java.lang.ClassNotFoundException","genericExceptionTypes":["java.io.IOException","java.lang.ClassNotFoundException"],"declaringClass":"java.util.regex.Pattern","name":"readObject","genericParameterTypes":"(java.io.ObjectInputStream)","modifiers":2,"returnType":"void","parameterTypes":"(ObjectInputStream)","genericReturnType":"void"},{"generic":"private void java.util.regex.Pattern.mark(int)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"mark","genericParameterTypes":"(int)","modifiers":2,"returnType":"void","parameterTypes":"(int)","genericReturnType":"void"},{"generic":"static java.util.regex.Pattern$CharProperty java.util.regex.Pattern.access$600(int,int)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"access$600","genericParameterTypes":"(int, int)","modifiers":4104,"returnType":"CharProperty","parameterTypes":"(int, int)","genericReturnType":"java.util.regex.Pattern$CharProperty"},{"generic":"private int java.util.regex.Pattern.peek()","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"peek","genericParameterTypes":"()","modifiers":2,"returnType":"int","parameterTypes":"()","genericReturnType":"int"},{"generic":"private int java.util.regex.Pattern.c()","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"c","genericParameterTypes":"()","modifiers":2,"returnType":"int","parameterTypes":"()","genericReturnType":"int"},{"generic":"private int java.util.regex.Pattern.read()","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"read","genericParameterTypes":"()","modifiers":2,"returnType":"int","parameterTypes":"()","genericReturnType":"int"},{"generic":"private void java.util.regex.Pattern.accept(int,java.lang.String)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"accept","genericParameterTypes":"(int, java.lang.String)","modifiers":2,"returnType":"void","parameterTypes":"(int, String)","genericReturnType":"void"},{"generic":"private void java.util.regex.Pattern.normalize()","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"normalize","genericParameterTypes":"()","modifiers":2,"returnType":"void","parameterTypes":"()","genericReturnType":"void"},{"generic":"private java.util.regex.PatternSyntaxException java.util.regex.Pattern.error(java.lang.String)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"error","genericParameterTypes":"(java.lang.String)","modifiers":2,"returnType":"PatternSyntaxException","parameterTypes":"(String)","genericReturnType":"java.util.regex.PatternSyntaxException"},{"generic":"private int java.util.regex.Pattern.skip()","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"skip","genericParameterTypes":"()","modifiers":2,"returnType":"int","parameterTypes":"()","genericReturnType":"int"},{"generic":"private java.util.regex.Pattern$Node java.util.regex.Pattern.ref(int)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"ref","genericParameterTypes":"(int)","modifiers":2,"returnType":"Node","parameterTypes":"(int)","genericReturnType":"java.util.regex.Pattern$Node"},{"generic":"private int java.util.regex.Pattern.escape(boolean,boolean)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"escape","genericParameterTypes":"(boolean, boolean)","modifiers":2,"returnType":"int","parameterTypes":"(boolean, boolean)","genericReturnType":"int"},{"generic":"public static java.lang.String java.util.regex.Pattern.quote(java.lang.String)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"quote","genericParameterTypes":"(java.lang.String)","modifiers":9,"returnType":"String","parameterTypes":"(String)","genericReturnType":"java.lang.String"},{"generic":"private void java.util.regex.Pattern.unread()","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"unread","genericParameterTypes":"()","modifiers":2,"returnType":"void","parameterTypes":"()","genericReturnType":"void"},{"generic":"private int java.util.regex.Pattern.o()","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"o","genericParameterTypes":"()","modifiers":2,"returnType":"int","parameterTypes":"()","genericReturnType":"int"},{"generic":"private java.util.regex.Pattern$Node java.util.regex.Pattern.sequence(java.util.regex.Pattern$Node)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"sequence","genericParameterTypes":"(java.util.regex.Pattern$Node)","modifiers":2,"returnType":"Node","parameterTypes":"(Node)","genericReturnType":"java.util.regex.Pattern$Node"},{"generic":"public java.lang.String java.util.regex.Pattern.pattern()","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"pattern","genericParameterTypes":"()","modifiers":1,"returnType":"String","parameterTypes":"()","genericReturnType":"java.lang.String"},{"generic":"private static java.util.regex.Pattern$CharProperty java.util.regex.Pattern.union(java.util.regex.Pattern$CharProperty,java.util.regex.Pattern$CharProperty)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"union","genericParameterTypes":"(java.util.regex.Pattern$CharProperty, java.util.regex.Pattern$CharProperty)","modifiers":10,"returnType":"CharProperty","parameterTypes":"(CharProperty, CharProperty)","genericReturnType":"java.util.regex.Pattern$CharProperty"},{"generic":"private int java.util.regex.Pattern.x()","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"x","genericParameterTypes":"()","modifiers":2,"returnType":"int","parameterTypes":"()","genericReturnType":"int"},{"generic":"private java.util.regex.Pattern$CharProperty java.util.regex.Pattern.family(boolean)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"family","genericParameterTypes":"(boolean)","modifiers":2,"returnType":"CharProperty","parameterTypes":"(boolean)","genericReturnType":"java.util.regex.Pattern$CharProperty"},{"generic":"private boolean java.util.regex.Pattern.has(int)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"has","genericParameterTypes":"(int)","modifiers":2,"returnType":"boolean","parameterTypes":"(int)","genericReturnType":"boolean"},{"generic":"private void java.util.regex.Pattern.RemoveQEQuoting()","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"RemoveQEQuoting","genericParameterTypes":"()","modifiers":2,"returnType":"void","parameterTypes":"()","genericReturnType":"void"},{"generic":"private void java.util.regex.Pattern.addFlag()","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"addFlag","genericParameterTypes":"()","modifiers":2,"returnType":"void","parameterTypes":"()","genericReturnType":"void"},{"generic":"private java.util.regex.Pattern$Node java.util.regex.Pattern.atom()","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"atom","genericParameterTypes":"()","modifiers":2,"returnType":"Node","parameterTypes":"()","genericReturnType":"java.util.regex.Pattern$Node"},{"generic":"private java.util.regex.Pattern$CharProperty java.util.regex.Pattern.bitsOrSingle(java.util.regex.Pattern$BitClass,int)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"bitsOrSingle","genericParameterTypes":"(java.util.regex.Pattern$BitClass, int)","modifiers":2,"returnType":"CharProperty","parameterTypes":"(BitClass, int)","genericReturnType":"java.util.regex.Pattern$CharProperty"},{"generic":"private java.util.regex.Pattern$CharProperty java.util.regex.Pattern.caseInsensitiveRangeFor(int,int)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"caseInsensitiveRangeFor","genericParameterTypes":"(int, int)","modifiers":2,"returnType":"CharProperty","parameterTypes":"(int, int)","genericReturnType":"java.util.regex.Pattern$CharProperty"},{"generic":"private java.util.regex.Pattern$CharProperty java.util.regex.Pattern.charPropertyNodeFor(java.lang.String)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"charPropertyNodeFor","genericParameterTypes":"(java.lang.String)","modifiers":2,"returnType":"CharProperty","parameterTypes":"(String)","genericReturnType":"java.util.regex.Pattern$CharProperty"},{"generic":"private java.util.regex.Pattern$Node java.util.regex.Pattern.closure(java.util.regex.Pattern$Node)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"closure","genericParameterTypes":"(java.util.regex.Pattern$Node)","modifiers":2,"returnType":"Node","parameterTypes":"(Node)","genericReturnType":"java.util.regex.Pattern$Node"},{"generic":"private java.lang.String java.util.regex.Pattern.composeOneStep(java.lang.String)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"composeOneStep","genericParameterTypes":"(java.lang.String)","modifiers":2,"returnType":"String","parameterTypes":"(String)","genericReturnType":"java.lang.String"},{"generic":"private static final int java.util.regex.Pattern.countChars(java.lang.CharSequence,int,int)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"countChars","genericParameterTypes":"(java.lang.CharSequence, int, int)","modifiers":26,"returnType":"int","parameterTypes":"(CharSequence, int, int)","genericReturnType":"int"},{"generic":"private static final int java.util.regex.Pattern.countCodePoints(java.lang.CharSequence)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"countCodePoints","genericParameterTypes":"(java.lang.CharSequence)","modifiers":26,"returnType":"int","parameterTypes":"(CharSequence)","genericReturnType":"int"},{"generic":"private java.util.regex.Pattern$Node java.util.regex.Pattern.createGroup(boolean)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"createGroup","genericParameterTypes":"(boolean)","modifiers":2,"returnType":"Node","parameterTypes":"(boolean)","genericReturnType":"java.util.regex.Pattern$Node"},{"generic":"private java.util.regex.Pattern$Node java.util.regex.Pattern.expr(java.util.regex.Pattern$Node)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"expr","genericParameterTypes":"(java.util.regex.Pattern$Node)","modifiers":2,"returnType":"Node","parameterTypes":"(Node)","genericReturnType":"java.util.regex.Pattern$Node"},{"generic":"private boolean java.util.regex.Pattern.findSupplementary(int,int)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"findSupplementary","genericParameterTypes":"(int, int)","modifiers":2,"returnType":"boolean","parameterTypes":"(int, int)","genericReturnType":"boolean"},{"generic":"private java.util.regex.Pattern$Node java.util.regex.Pattern.group0()","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"group0","genericParameterTypes":"()","modifiers":2,"returnType":"Node","parameterTypes":"()","genericReturnType":"java.util.regex.Pattern$Node"},{"generic":"private static boolean java.util.regex.Pattern.hasBaseCharacter(java.util.regex.Matcher,int,java.lang.CharSequence)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"hasBaseCharacter","genericParameterTypes":"(java.util.regex.Matcher, int, java.lang.CharSequence)","modifiers":10,"returnType":"boolean","parameterTypes":"(Matcher, int, CharSequence)","genericReturnType":"boolean"},{"generic":"private static boolean java.util.regex.Pattern.inRange(int,int,int)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"inRange","genericParameterTypes":"(int, int, int)","modifiers":10,"returnType":"boolean","parameterTypes":"(int, int, int)","genericReturnType":"boolean"},{"generic":"private static java.util.regex.Pattern$CharProperty java.util.regex.Pattern.intersection(java.util.regex.Pattern$CharProperty,java.util.regex.Pattern$CharProperty)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"intersection","genericParameterTypes":"(java.util.regex.Pattern$CharProperty, java.util.regex.Pattern$CharProperty)","modifiers":10,"returnType":"CharProperty","parameterTypes":"(CharProperty, CharProperty)","genericReturnType":"java.util.regex.Pattern$CharProperty"},{"generic":"private boolean java.util.regex.Pattern.isLineSeparator(int)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"isLineSeparator","genericParameterTypes":"(int)","modifiers":2,"returnType":"boolean","parameterTypes":"(int)","genericReturnType":"boolean"},{"generic":"private static final boolean java.util.regex.Pattern.isSupplementary(int)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"isSupplementary","genericParameterTypes":"(int)","modifiers":26,"returnType":"boolean","parameterTypes":"(int)","genericReturnType":"boolean"},{"generic":"private static final boolean java.util.regex.Pattern.isSurrogate(int)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"isSurrogate","genericParameterTypes":"(int)","modifiers":26,"returnType":"boolean","parameterTypes":"(int)","genericReturnType":"boolean"},{"generic":"private java.util.regex.Pattern$CharProperty java.util.regex.Pattern.newSingle(int)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"newSingle","genericParameterTypes":"(int)","modifiers":2,"returnType":"CharProperty","parameterTypes":"(int)","genericReturnType":"java.util.regex.Pattern$CharProperty"},{"generic":"private java.util.regex.Pattern$Node java.util.regex.Pattern.newSlice(int[],int,boolean)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"newSlice","genericParameterTypes":"(int[], int, boolean)","modifiers":2,"returnType":"Node","parameterTypes":"(int[], int, boolean)","genericReturnType":"java.util.regex.Pattern$Node"},{"generic":"private int java.util.regex.Pattern.nextEscaped()","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"nextEscaped","genericParameterTypes":"()","modifiers":2,"returnType":"int","parameterTypes":"()","genericReturnType":"int"},{"generic":"private int java.util.regex.Pattern.normalizeCharClass(java.lang.StringBuilder,int)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"normalizeCharClass","genericParameterTypes":"(java.lang.StringBuilder, int)","modifiers":2,"returnType":"int","parameterTypes":"(StringBuilder, int)","genericReturnType":"int"},{"generic":"private int java.util.regex.Pattern.parsePastLine()","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"parsePastLine","genericParameterTypes":"()","modifiers":2,"returnType":"int","parameterTypes":"()","genericReturnType":"int"},{"generic":"private int java.util.regex.Pattern.parsePastWhitespace(int)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"parsePastWhitespace","genericParameterTypes":"(int)","modifiers":2,"returnType":"int","parameterTypes":"(int)","genericReturnType":"int"},{"generic":"private int java.util.regex.Pattern.peekPastLine()","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"peekPastLine","genericParameterTypes":"()","modifiers":2,"returnType":"int","parameterTypes":"()","genericReturnType":"int"},{"generic":"private int java.util.regex.Pattern.peekPastWhitespace(int)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"peekPastWhitespace","genericParameterTypes":"(int)","modifiers":2,"returnType":"int","parameterTypes":"(int)","genericReturnType":"int"},{"generic":"private static void java.util.regex.Pattern.printObjectTree(java.util.regex.Pattern$Node)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"printObjectTree","genericParameterTypes":"(java.util.regex.Pattern$Node)","modifiers":10,"returnType":"void","parameterTypes":"(Node)","genericReturnType":"void"},{"generic":"private java.lang.String java.util.regex.Pattern.produceEquivalentAlternation(java.lang.String)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"produceEquivalentAlternation","genericParameterTypes":"(java.lang.String)","modifiers":2,"returnType":"String","parameterTypes":"(String)","genericReturnType":"java.lang.String"},{"generic":"private java.lang.String[] java.util.regex.Pattern.producePermutations(java.lang.String)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"producePermutations","genericParameterTypes":"(java.lang.String)","modifiers":2,"returnType":"String[]","parameterTypes":"(String)","genericReturnType":"java.lang.String[]"},{"generic":"private java.util.regex.Pattern$CharProperty java.util.regex.Pattern.range(java.util.regex.Pattern$BitClass)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"range","genericParameterTypes":"(java.util.regex.Pattern$BitClass)","modifiers":2,"returnType":"CharProperty","parameterTypes":"(BitClass)","genericReturnType":"java.util.regex.Pattern$CharProperty"},{"generic":"private static java.util.regex.Pattern$CharProperty java.util.regex.Pattern.rangeFor(int,int)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"rangeFor","genericParameterTypes":"(int, int)","modifiers":10,"returnType":"CharProperty","parameterTypes":"(int, int)","genericReturnType":"java.util.regex.Pattern$CharProperty"},{"generic":"private int java.util.regex.Pattern.readEscaped()","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"readEscaped","genericParameterTypes":"()","modifiers":2,"returnType":"int","parameterTypes":"()","genericReturnType":"int"},{"generic":"private static java.util.regex.Pattern$CharProperty java.util.regex.Pattern.setDifference(java.util.regex.Pattern$CharProperty,java.util.regex.Pattern$CharProperty)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"setDifference","genericParameterTypes":"(java.util.regex.Pattern$CharProperty, java.util.regex.Pattern$CharProperty)","modifiers":10,"returnType":"CharProperty","parameterTypes":"(CharProperty, CharProperty)","genericReturnType":"java.util.regex.Pattern$CharProperty"},{"generic":"private int java.util.regex.Pattern.single()","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"single","genericParameterTypes":"()","modifiers":2,"returnType":"int","parameterTypes":"()","genericReturnType":"int"},{"generic":"private void java.util.regex.Pattern.subFlag()","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"subFlag","genericParameterTypes":"()","modifiers":2,"returnType":"void","parameterTypes":"()","genericReturnType":"void"},{"generic":"private int java.util.regex.Pattern.u()","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"u","genericParameterTypes":"()","modifiers":2,"returnType":"int","parameterTypes":"()","genericReturnType":"int"},{"generic":"private java.util.regex.Pattern$CharProperty java.util.regex.Pattern.unicodeBlockPropertyFor(java.lang.String)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"unicodeBlockPropertyFor","genericParameterTypes":"(java.lang.String)","modifiers":2,"returnType":"CharProperty","parameterTypes":"(String)","genericReturnType":"java.util.regex.Pattern$CharProperty"}],"interfaces":["java.io.Serializable"],"modifiers":17,"type":"CLASS","declaredConstructors":[{"generic":"private java.util.regex.Pattern(java.lang.String,int)","genericExceptionTypes":[],"declaringClass":"java.util.regex.Pattern","name":"java.util.regex.Pattern","genericParameterTypes":"(java.lang.String, int)","modifiers":2,"parameterTypes":"(String, int)"}],"constructors":[],"fields":[{"declaringClass":"java.util.regex.Pattern","name":"UNIX_LINES","modifiers":25,"type":"int"},{"declaringClass":"java.util.regex.Pattern","name":"CASE_INSENSITIVE","modifiers":25,"type":"int"},{"declaringClass":"java.util.regex.Pattern","name":"COMMENTS","modifiers":25,"type":"int"},{"declaringClass":"java.util.regex.Pattern","name":"MULTILINE","modifiers":25,"type":"int"},{"declaringClass":"java.util.regex.Pattern","name":"LITERAL","modifiers":25,"type":"int"},{"declaringClass":"java.util.regex.Pattern","name":"DOTALL","modifiers":25,"type":"int"},{"declaringClass":"java.util.regex.Pattern","name":"UNICODE_CASE","modifiers":25,"type":"int"},{"declaringClass":"java.util.regex.Pattern","name":"CANON_EQ","modifiers":25,"type":"int"}]}
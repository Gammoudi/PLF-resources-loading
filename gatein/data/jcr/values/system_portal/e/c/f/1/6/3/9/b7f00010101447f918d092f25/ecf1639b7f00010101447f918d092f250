 A synchronization point at which threads can pair and swap elements
 within pairs.  Each thread presents some object on entry to the
 <a href='#exchange'>exchange</a> method, matches with a partner thread,
 and receives its partner's object on return.  An Exchanger may be
 viewed as a bidirectional form of a <a href='../java/util/concurrent/SynchronousQueue.html' title='SynchronousQueue'>SynchronousQueue</a>.
 Exchangers may be useful in applications such as genetic algorithms
 and pipeline designs.

 <p><b>Sample Usage:</b>
 Here are the highlights of a class that uses an <TT>Exchanger</TT>
 to swap buffers between threads so that the thread filling the
 buffer gets a freshly emptied one when it needs it, handing off the
 filled one to the thread emptying the buffer.
 <pre><TT>class FillAndEmpty {
   Exchanger<DataBuffer> exchanger = new Exchanger<DataBuffer>();
   DataBuffer initialEmptyBuffer = ... a made-up type
   DataBuffer initialFullBuffer = ...

   class FillingLoop implements Runnable {
     public void run() {
       DataBuffer currentBuffer = initialEmptyBuffer;
       try {
         while (currentBuffer != null) {
           addToBuffer(currentBuffer);
           if (currentBuffer.isFull())
             currentBuffer = exchanger.exchange(currentBuffer);
         </TT>
       } catch (InterruptedException ex) { ... handle ... }
     }
   }

   class EmptyingLoop implements Runnable {
     public void run() {
       DataBuffer currentBuffer = initialFullBuffer;
       try {
         while (currentBuffer != null) {
           takeFromBuffer(currentBuffer);
           if (currentBuffer.isEmpty())
             currentBuffer = exchanger.exchange(currentBuffer);
         }
       } catch (InterruptedException ex) { ... handle ...}
     }
   }

   void start() {
     new Thread(new FillingLoop()).start();
     new Thread(new EmptyingLoop()).start();
   }
 }
 }</pre>

 <p>Memory consistency effects: For each pair of threads that
 successfully exchange objects via an <TT>Exchanger</TT>, actions
 prior to the <TT>exchange()</TT> in each thread
 <a href="package-summary.html#MemoryVisibility"><i>happen-before</i></a>
 those subsequent to a return from the corresponding <TT>exchange()</TT>
 in the other thread.
 <DL><DT><B>Parameters:</B></DT><DD><code><V></code> -  The type of objects that may be exchanged</DD></DL><DL><DT><B>Authors:</B></DT><DD>Doug Lea and Bill Scherer and Michael Scott</DD></DL><DL><DT><B>Since:</B></DT><DD>1.5</DD></DL>
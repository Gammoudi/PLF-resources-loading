 A <a href='../java/util/SortedSet.html' title='SortedSet'>SortedSet</a> extended with navigation methods reporting
 closest matches for given search targets. Methods <TT>lower</TT>,
 <TT>floor</TT>, <TT>ceiling</TT>, and <TT>higher</TT> return elements
 respectively less than, less than or equal, greater than or equal,
 and greater than a given element, returning <TT>null</TT> if there
 is no such element.  A <TT>NavigableSet</TT> may be accessed and
 traversed in either ascending or descending order.  The <TT>descendingSet</TT> method returns a view of the set with the senses of
 all relational and directional methods inverted. The performance of
 ascending operations and views is likely to be faster than that of
 descending ones.  This interface additionally defines methods
 <TT>pollFirst</TT> and <TT>pollLast</TT> that return and remove the
 lowest and highest element, if one exists, else returning <TT>null</TT>.  Methods <TT>subSet</TT>, <TT>headSet</TT>,
 and <TT>tailSet</TT> differ from the like-named <TT>SortedSet</TT> methods in accepting additional arguments describing
 whether lower and upper bounds are inclusive versus exclusive.
 Subsets of any <TT>NavigableSet</TT> must implement the <TT>NavigableSet</TT> interface.

 <p> The return values of navigation methods may be ambiguous in
 implementations that permit <TT>null</TT> elements. However, even
 in this case the result can be disambiguated by checking
 <TT>contains(null)</TT>. To avoid such issues, implementations of
 this interface are encouraged to <em>not</em> permit insertion of
 <TT>null</TT> elements. (Note that sorted sets of java.lang.Comparable elements intrinsically do not permit <TT>null</TT>.)

 <p>Methods
 <a href='#subSet(Object, Object) subSet(E, E)'>subSet(Object, Object) subSet(E, E)</a>,
 <a href='#headSet(Object) headSet(E)'>headSet(Object) headSet(E)</a>, and
 <a href='#tailSet(Object) tailSet(E)'>tailSet(Object) tailSet(E)</a>
 are specified to return <TT>SortedSet</TT> to allow existing
 implementations of <TT>SortedSet</TT> to be compatibly retrofitted to
 implement <TT>NavigableSet</TT>, but extensions and implementations
 of this interface are encouraged to override these methods to return
 <TT>NavigableSet</TT>.

 <p>This interface is a member of the
 <a href="{@docRoot}/../technotes/guides/collections/index.html">
 Java Collections Framework</a>.
 <DL><DT><B>Parameters:</B></DT><DD><code><E></code> -  the type of elements maintained by this set</DD></DL><DL><DT><B>Authors:</B></DT><DD>Doug Lea</DD><DD>Josh Bloch</DD></DL><DL><DT><B>Since:</B></DT><DD>1.6</DD></DL>
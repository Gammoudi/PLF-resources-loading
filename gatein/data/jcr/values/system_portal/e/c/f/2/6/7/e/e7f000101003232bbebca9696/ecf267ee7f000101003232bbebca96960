
	 * Returns a <code>List</code> of <code>String</code>s containing
	 * formats to be used to load resource bundles for the given
	 * <code>baseName</code>. The <code>ResourceBundle.getBundle</code>
	 * factory method tries to load resource bundles with formats in the
	 * order specified by the list. The list returned by this method
	 * must have at least one <code>String</code>. The predefined
	 * formats are <code>"java.class"</code> for class-based resource
	 * bundles and <code>"java.properties"</code> for {@linkplain
	 * PropertyResourceBundle properties-based} ones. Strings starting
	 * with <code>"java."</code> are reserved for future extensions and
	 * must not be used by application-defined formats.
	 *
	 * <p>It is not a requirement to return an immutable (unmodifiable)
	 * <code>List</code>.  However, the returned <code>List</code> must
	 * not be mutated after it has been returned by
	 * <code>getFormats</code>.
	 *
	 * <p>The default implementation returns {@link #FORMAT_DEFAULT} so
	 * that the <code>ResourceBundle.getBundle</code> factory method
	 * looks up first class-based resource bundles, then
	 * properties-based ones.
	 *
         * @param baseName
	 *        the base name of the resource bundle, a fully qualified class
	 *        name
	 * @return a <code>List</code> of <code>String</code>s containing
	 *        formats for loading resource bundles.
	 * @exception NullPointerException
	 *        if <code>baseName</code> is null
	 * @see #FORMAT_DEFAULT
	 * @see #FORMAT_CLASS
	 * @see #FORMAT_PROPERTIES
	 
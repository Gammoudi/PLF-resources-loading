
	 * Returns the time-to-live (TTL) value for resource bundles that
	 * are loaded under this
	 * <code>ResourceBundle.Control</code>. Positive time-to-live values
	 * specify the number of milliseconds a bundle can remain in the
	 * cache without being validated against the source data from which
	 * it was constructed. The value 0 indicates that a bundle must be
	 * validated each time it is retrieved from the cache. {@link
	 * #TTL_DONT_CACHE} specifies that loaded resource bundles are not
	 * put in the cache. {@link #TTL_NO_EXPIRATION_CONTROL} specifies
	 * that loaded resource bundles are put in the cache with no
	 * expiration control.
	 *
	 * <p>The expiration affects only the bundle loading process by the
	 * <code>ResourceBundle.getBundle</code> factory method.  That is,
	 * if the factory method finds a resource bundle in the cache that
	 * has expired, the factory method calls the {@link
	 * #needsReload(String, Locale, String, ClassLoader, ResourceBundle,
	 * long) needsReload} method to determine whether the resource
	 * bundle needs to be reloaded. If <code>needsReload</code> returns
	 * <code>true</code>, the cached resource bundle instance is removed
	 * from the cache. Otherwise, the instance stays in the cache,
	 * updated with the new TTL value returned by this method.
	 *
	 * <p>All cached resource bundles are subject to removal from the
	 * cache due to memory constraints of the runtime environment.
	 * Returning a large positive value doesn't mean to lock loaded
	 * resource bundles in the cache.
	 *
	 * <p>The default implementation returns {@link #TTL_NO_EXPIRATION_CONTROL}.
	 *
	 * @param baseName
	 *	  the base name of the resource bundle for which the
	 *	  expiration value is specified.
	 * @param locale
	 *        the locale of the resource bundle for which the
	 *        expiration value is specified.
	 * @return the time (0 or a positive millisecond offset from the
	 *        cached time) to get loaded bundles expired in the cache,
	 *        {@link #TTL_NO_EXPIRATION_CONTROL} to disable the
	 *        expiration control, or {@link #TTL_DONT_CACHE} to disable
	 *        caching.
	 * @exception NullPointerException
	 *	  if <code>baseName</code> or <code>locale</code> is
	 *	  <code>null</code>
	 